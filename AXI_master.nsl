// CLK(ACLK) RST(ARESETn) NEGRST

#include "AXI_master.nsh"

module AXI_master {
    reg awvalid = 0b0;
    reg awaddr[32] = 0x00000000;

    reg wvalid = 0b0;
    reg wdata_r[64] = 0x0000000000000000;
    reg wstrb[8] = 0xff;

    reg bready = 0b0;
    reg bresp[2] = 0b00;

    label_name WAIT_READY, WAIT_BVALID, FINISH;

    AWVALID = awvalid;
    AWADDR = awaddr;

    WVALID = wvalid;
    WDATA = wdata_r;

    WSTRB = wstrb;

    BREADY = bready;

    func write seq {
        {
            awvalid := 1;
            awaddr := waddr;

            wvalid := 1;
            wdata_r := wdata;

            wstrb := wstrobe;

            bready := 1;
        }

WAIT_READY:
        if (AWREADY & WREADY) {
            awvalid := 0;
            wvalid := 0;

            awaddr := 0;
            wdata_r := 0;
            wstrb := 0;

            goto WAIT_BVALID;
        } else {
            goto WAIT_READY;
        }

WAIT_BVALID:
        if (BVALID) {
            bresp := BRESP;
            bready := ~bready;

            goto FINISH;
        } else {
            goto WAIT_BVALID;
        }

FINISH:
        finish_w(bresp);
    }

    func read {

    }
}